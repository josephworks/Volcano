From 328241d54b6ae0679324c03c63369d9d09548082 Mon Sep 17 00:00:00 2001
From: GMatrixGames <gmatrixgames@hotmail.com>
Date: Tue, 14 May 2019 21:42:25 -0400
Subject: [PATCH] ArrowCollideEvent from TacoSpigot

---
 .../event/entity/ArrowCollideEvent.java       | 61 +++++++++++++++++++
 1 file changed, 61 insertions(+)
 create mode 100644 src/main/java/net/techcable/tacospigot/event/entity/ArrowCollideEvent.java

diff --git a/src/main/java/net/techcable/tacospigot/event/entity/ArrowCollideEvent.java b/src/main/java/net/techcable/tacospigot/event/entity/ArrowCollideEvent.java
new file mode 100644
index 00000000..7bfb9224
--- /dev/null
+++ b/src/main/java/net/techcable/tacospigot/event/entity/ArrowCollideEvent.java
@@ -0,0 +1,61 @@
+package net.techcable.tacospigot.event.entity;
+
+import org.bukkit.entity.Arrow;
+import org.bukkit.entity.Entity;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.entity.EntityEvent;
+
+/**
+ * Called when an arrow collides with an entity
+ * <p>
+ * This even is called <b>before</b> {@link org.bukkit.event.entity.EntityDamageByEntityEvent}, and cancelling it will allow the arrow to continue flying
+ */
+public class ArrowCollideEvent extends EntityEvent implements Cancellable {
+
+    private final Entity collidedWith;
+
+    /**
+     * Get the entity the arrow collided with
+     *
+     * @return the entity
+     */
+    public Entity getCollidedWith() {
+        return collidedWith;
+    }
+
+    public ArrowCollideEvent(Arrow what, Entity collidedWith) {
+        super(what);
+        this.collidedWith = collidedWith;
+    }
+
+    /**
+     * Get the arrow that collided
+     *
+     * @return the arrow that collided
+     */
+    public Arrow getEntity() {
+        return (Arrow) super.getEntity();
+    }
+
+    private static final HandlerList handlerList = new HandlerList();
+    public static HandlerList getHandlerList() {
+        return handlerList;
+    }
+
+    @Override
+    public HandlerList getHandlers() {
+        return handlerList;
+    }
+
+    private boolean cancelled = false;
+    @Override
+    public boolean isCancelled() {
+        return cancelled;
+    }
+
+    @Override
+    public void setCancelled(boolean cancelled) {
+        this.cancelled = cancelled;
+    }
+}
\ No newline at end of file
-- 
2.22.0.rc0

